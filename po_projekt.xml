<?xml version="1.0"?>
<doc>
    <assembly>
        <name>po_projekt</name>
    </assembly>
    <members>
        <member name="T:po_projekt.akcesoria">
            <summary>
            klasa opisująca akcesoria.
            </summary>
        </member>
        <member name="T:po_projekt.IOferta">
            <summary>
            Interfejs Oferty.
            </summary>
        </member>
        <member name="M:po_projekt.IOferta.Dodaj(po_projekt.samochody)">
            <summary>
            Metoda pozwalająca dodać samochód.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.IOferta.Usuń(po_projekt.samochody)">
            <summary>
            Metoda pozwalająca usunąć samochód.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.IOferta.Wyczysc">
            <summary>
            Wyczyszczenie - ustawienie ilości samochodów do wypożyczenia na 0.
            </summary>
        </member>
        <member name="M:po_projekt.IOferta.PodajIlosc">
            <summary>
            Ilość samochodów do wypożyczenia.
            </summary>
            <returns>Ilość samochodów do wypożyczenia.</returns>
        </member>
        <member name="T:po_projekt.klienci">
            <summary>
            Klasa opisująca klientów.
            </summary>
        </member>
        <member name="F:po_projekt.klienci.Klienci">
            <summary>
            Lista klientów.
            </summary>
        </member>
        <member name="P:po_projekt.klienci.Liczba_klientów">
            <summary>
            Liczba_klientów jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Liczba_klientów jest liczbą.
            </summary>
            <value>
            Liczba klientów.
            </value>
        </member>
        <member name="M:po_projekt.klienci.Dodaj(po_projekt.klient)">
            <summary>
            Metoda pozwalająca na dodanie klienta.
            </summary>
            <param name="k">Parametr k pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.klienci.Usuń(po_projekt.klient)">
            <summary>
            Metoda pozwalająca usunąć klienta.
            </summary>
            <param name="k">Parametr k pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.klienci.sprawdzenie(po_projekt.klient)">
            <summary>
            Sprawdzenie czy występuje podany klient dzięki jego numerowi.
            </summary>
            <param name="k">Parametr k pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Klient występuje, bądź nie.</returns>
        </member>
        <member name="M:po_projekt.klienci.Zapisz_Klientów_XML(System.String,po_projekt.klienci)">
            <summary>
            Zapis klientów - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="k">Parametr k pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.klienci.Odczytaj_Klientów_XML(System.String)">
            <summary>
            Odczyt klientów - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Zwraca nasz parametr k.</returns>
        </member>
        <member name="M:po_projekt.klienci.ToString">
            <summary>
            Wypisanie klientów.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje dodanych klientów w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.klient">
            <summary>
            Klasa opisująca klienta.
            </summary>
            <seealso cref="T:po_projekt.osoba" />
        </member>
        <member name="P:po_projekt.klient.Numer_klienta">
            <summary>
            Numer_klienta jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Numer_klienta jest liczbą.
            </summary>
            <value>
            Numer klienta.
            </value>
        </member>
        <member name="M:po_projekt.klient.#ctor">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.klient"/> klasy.
            </summary>
        </member>
        <member name="M:po_projekt.klient.#ctor(System.String)">
            <summary>
            Inicjalizuje nową instację <see cref="T:po_projekt.klient"/> klasy.
            </summary>
            <param name="numer_klienta">Parametr numer_klienta pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException">Wyrzuca wyjątek numer_klienta.</exception>
        </member>
        <member name="M:po_projekt.klient.#ctor(System.String,System.String,System.String)">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.klient"/> klasy.
            </summary>
            <param name="imie">Parametr imie pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="nazwisko">Parametr nazwisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="pESEL">Parametr pESEL pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException"> Wyrzuca wyjątek 
            imie
            lub
            nazwisko
            lub
            pESEL
            </exception>
        </member>
        <member name="M:po_projekt.klient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.klient"/> klasy.
            </summary>
            <param name="imie">Parametr imie pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="nazwisko">Parametr nazwisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="pESEL">Parametr pESEL pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="identyfikator">Parametr identyfikator pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException"> Wyrzuca wyjątek
            imie
            lub
            nazwisko
            lub
            pESEL
            lub
            Numer_klienta
            </exception>
        </member>
        <member name="M:po_projekt.klient.Rezerwacje_klienta(po_projekt.oferta)">
            <summary>
            Rezerwacje klienta.
            </summary>
            <param name="s">>Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.klient.ToString">
            <summary>
            Wypisanie klienta.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje klienta w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.ModelCOMPARATOR">
            <summary>
            Klasa porównująca modele samochodów.
            </summary>
            <seealso cref="!:System.Collections.Generic.IComparer&lt;po_projekt.samochody&gt;" />
        </member>
        <member name="M:po_projekt.ModelCOMPARATOR.Compare(po_projekt.samochody,po_projekt.samochody)">
            <summary>
            Porównuje dwa obiekty i zwraca tą wartość która jest większa, równa lub większa od tej drugiej.
            </summary>
            <param name="x">Pierwszy obiekt do porównania.</param>
            <param name="y">Drugi obiekt do porównania.</param>
            <returns>
            Liczba całkowita wskazująca wartości <paramref name="x" /> i <paramref name="y" />, jak pokazano w tabeli.
            Wartość
            Znaczenie
            Mniejszy niż zero
            <paramref name="x" /> jest mniejszy niż <paramref name="y" />.
            Zero
            <paramref name="x" /> równy <paramref name="y" />.
            Większy niż zero
            <paramref name="x" /> jest większy niż <paramref name="y" />.
            </returns>
        </member>
        <member name="T:po_projekt.oferta">
            <summary>
            Klasa opisująca oferty.
            </summary>
            <seealso cref="T:po_projekt.samochody" />
            <seealso cref="T:po_projekt.IOferta" />
        </member>
        <member name="F:po_projekt.oferta.Oferta">
            <summary>
            Lista ofert.
            </summary>
        </member>
        <member name="F:po_projekt.oferta.lista">
            <summary>
            Lista samochodów.
            </summary>
        </member>
        <member name="M:po_projekt.oferta.#ctor">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.oferta"/> klasy.
            </summary>
        </member>
        <member name="M:po_projekt.oferta.#ctor(System.Collections.Generic.LinkedList{po_projekt.samochody})">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.oferta"/> klasy.
            </summary>
            <param name="oferta">Parametr oferta pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException">Wyrzuca wyjątek oferta.</exception>
        </member>
        <member name="M:po_projekt.oferta.#ctor(System.Collections.Generic.LinkedList{po_projekt.samochody},System.Collections.Generic.List{po_projekt.samochody},System.Int32)">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.oferta"/> klasy.
            </summary>
            <param name="oferta">Parametr oferta pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="lista">Parametr lista pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="ilość_samochodów_do_wypożyczenia">Parametr ilość_samochodów_do_wypożyczenia pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException">Wyrzuca wyjątek lista.</exception>
        </member>
        <member name="M:po_projekt.oferta.Dodaj(po_projekt.samochody)">
            <summary>
            Metoda pozwalająca dodać samochód.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.oferta.Usuń(po_projekt.samochody)">
            <summary>
            Metoda pozwalająca usunąć samochód.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.oferta.Wyczysc">
            <summary>
            Wyczyszczenie - ustawienie ilości samochodów do wypożyczenia na 0.
            </summary>
        </member>
        <member name="M:po_projekt.oferta.PodajIlosc">
            <summary>
            Ilość samochodów do wypożyczenia.
            </summary>
            <returns>
            Ilość samochodów do wypożyczenia.
            </returns>
        </member>
        <member name="M:po_projekt.oferta.wybór_samochodu_do_usunięcia">
            <summary>
            Wybórs samochodu do usunięcia.
            </summary>
            <returns>Usuwa wybrany samochód.</returns>
        </member>
        <member name="M:po_projekt.oferta.ZapiszXML(System.String,po_projekt.oferta)">
            <summary>
            Zapis oferty - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="xmloferta">Parametr xmloferta pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.oferta.OdczytajXML(System.String)">
            <summary>
            Odczyt oferty - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Zwraca xmloferta.</returns>
        </member>
        <member name="M:po_projekt.oferta.Sortuj_po_klasie_samochodu">
            <summary>
            Sortowanie po klasie samochodu.
            </summary>
        </member>
        <member name="M:po_projekt.oferta.Sortuj_po_modelu_samochodu">
            <summary>
            Sortowanie po modelu samochodu.
            </summary>
        </member>
        <member name="M:po_projekt.oferta.ToString">
            <summary>
            Wypisanie samochodów zarezerwowanych.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje zarezerwowane samochody w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.osoba">
            <summary>
            Klasa opisująca osobę.
            </summary>
        </member>
        <member name="P:po_projekt.osoba.Imie">
            <summary>
            Imie jest zadeklarowane jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Imie jest liczbą.
            </summary>
            <value>
            Imię.
            </value>
        </member>
        <member name="P:po_projekt.osoba.Nazwisko">
            <summary>
            Nazwisko jest zadeklarowane jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Nazwisko jest liczbą.
            </summary>
            <value>
            Nazwisko.
            </value>
        </member>
        <member name="P:po_projekt.osoba.Pesel">
            <summary>
            Pesel jest zadeklarowane jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Pesel jest liczbą.
            </summary>
            <value>
            Pesel.
            </value>
        </member>
        <member name="M:po_projekt.osoba.#ctor">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.osoba"/> klasy.
            </summary>
        </member>
        <member name="M:po_projekt.osoba.#ctor(System.String,System.String,System.String)">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.osoba"/> klasy.
            </summary>
            <param name="imie">Parametr imie pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="nazwisko">Parametr nazwisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="pESEL">Parametr pESEL pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException"> Wyrzucenie wyjątku 
            imie
            lub
            nazwisko
            lub
            pESEL
            </exception>
        </member>
        <member name="M:po_projekt.osoba.ToString">
            <summary>
            Wypisanie osób.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje osoby w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.pracownicy">
            <summary>
            Klasa opisująca pracowników.
            </summary>
        </member>
        <member name="F:po_projekt.pracownicy.Pracownicy">
            <summary>
            Lista pracowników.
            </summary>
        </member>
        <member name="M:po_projekt.pracownicy.Dodaj(po_projekt.pracownik)">
            <summary>
            Metoda pozwalająca dodać pracownika.
            </summary>
            <param name="p">Parametr p pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.pracownicy.Usuń(po_projekt.pracownik)">
            <summary>
            Metoda pozwalająca usunąć pracownika.
            </summary>
            <param name="p">Parametr p pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.pracownicy.sprawdzenie(po_projekt.pracownik)">
            <summary>
            Metoda pozwalająca sprawdzić pracownika (po identyfikatorze).
            </summary>
            <param name="p">Parametr p pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Klient występuje, bądź nie.</returns>
        </member>
        <member name="M:po_projekt.pracownicy.Zapisz_Pracowników_XML(System.String,po_projekt.pracownicy)">
            <summary>
            Zapis Pracowników - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="p">Parametr p pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.pracownicy.Odczytaj_Pracowników_XML(System.String)">
            <summary>
            Odczyt Pracowników - XML.
            </summary>
            <param name="nazwa">Parametr nazwa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Zwraca nasz parametr p.</returns>
        </member>
        <member name="M:po_projekt.pracownicy.wybór_pracownika_do_usunięcia">
            <summary>
            Wybór pracownika do usunięcia.
            </summary>
            <returns>Usunięcie pracownika.</returns>
        </member>
        <member name="M:po_projekt.pracownicy.ToString">
            <summary>
            Wypisanie pracowników.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje pracowników w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.pracownik">
            <summary>
            Klasa opisująca pracownika.
            </summary>
            <seealso cref="T:po_projekt.osoba" />
        </member>
        <member name="P:po_projekt.pracownik.Identyfikator">
            <summary>
            Identyfikator jest zadeklarowany jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Identyfikatora jest liczbą.
            </summary>
            <value>
            Identyfikator.
            </value>
        </member>
        <member name="P:po_projekt.pracownik.Stanowisko1">
            <summary>
            Stanowisko jest zadeklarowane jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Stanowiska jest liczbą.
            </summary>
            <value>
            Stanowisko.
            </value>
        </member>
        <member name="M:po_projekt.pracownik.#ctor">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.pracownik"/> klasy.
            </summary>
        </member>
        <member name="M:po_projekt.pracownik.#ctor(System.String)">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.pracownik"/> klasy.
            </summary>
            <param name="identyfikator">Parametr identyfikator pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException">Wyrzucenie wyjątku identyfikator.</exception>
        </member>
        <member name="M:po_projekt.pracownik.#ctor(System.String,po_projekt.pracownik.Stanowisko)">
            <summary>
            Inicjalizuje nową instancje <see cref="T:po_projekt.pracownik"/> klasy.
            </summary>
            <param name="identyfikator">Parametr identyfikator pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="stanowisko">Parametr stanowisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.pracownik.#ctor(System.String,System.String,System.String)">
            <summary>
            Inicjalizuje nową instacje <see cref="T:po_projekt.pracownik"/> klasy.
            </summary>
            <param name="imie">Parametr imie pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="nazwisko">Parametr nazwisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="pESEL">Parametr pESEL pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException"> Wyrzucenie wyjątku
            imie
            lub
            nazwisko
            lub
            pESEL
            </exception>
        </member>
        <member name="M:po_projekt.pracownik.#ctor(System.String,System.String,System.String,System.String,po_projekt.pracownik.Stanowisko)">
            <summary>
            Inicjalizuje nową instacje <see cref="T:po_projekt.pracownik"/> klasy.
            </summary>
            <param name="imie">Parametr imie pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="nazwisko">Parametr nazwisko pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="pESEL">Parametr pESEL pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="identyfikator">Parametr identyfikator pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="stanowisko">Parametr parametr pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <exception cref="T:System.ArgumentNullException"> Wyrzucenie wyjątku
            imie
            lub
            nazwisko
            lub
            pESEL
            lub
            identyfikator
            </exception>
        </member>
        <member name="M:po_projekt.pracownik.ToString">
            <summary>
            Wypisanie Pracowników.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje pracowników w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.Program">
            <summary>
            Klasa opisująca program.
            </summary>
        </member>
        <member name="T:po_projekt.rezerwacja">
            <summary>
            Klasa opisująca rezerwacje.
            </summary>
            <seealso cref="T:po_projekt.oferta" />
            <seealso cref="T:po_projekt.IOferta" />
        </member>
        <member name="P:po_projekt.rezerwacja.Rezerwacja1">
            <summary>
             Rezerwacja1 jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Rezerwacja1 jest liczbą.
            </summary>
            <value>
            Rezerwacja.
            </value>
        </member>
        <member name="P:po_projekt.rezerwacja.Ilość_samochodów_zarezerwowanych1">
            <summary>
            Ilość_samochodów_zarezerwowanych1 jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Ilość_samochodów_zarezerwowanych1 jest liczbą.
            </summary>
            <value>
            Ilość samochodów zarezerwowanych.
            </value>
        </member>
        <member name="M:po_projekt.rezerwacja.rezerwuj(po_projekt.samochody,po_projekt.klient)">
            <summary>
            Rezerwacja samochodu przez klienta.
            </summary>
            <param name="s">The s.</param>
            <param name="K">The k.</param>
        </member>
        <member name="M:po_projekt.rezerwacja.wybór_samochodu_do_rezerwacji(po_projekt.oferta,po_projekt.klient)">
            <summary>
            Wybórs the samochodu do rezerwacji.
            </summary>
            <param name="s">>Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="K">>Parametr K pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Wybrany samochód.</returns>
        </member>
        <member name="M:po_projekt.rezerwacja.ToString">
            <summary>
            Wypisanie rezerwacji.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje rezerwacje w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.samochody">
            <summary>
            Klasa opisująca samochody.
            </summary>
            <seealso cref="T:System.IComparable" />
        </member>
        <member name="P:po_projekt.samochody.Klasa1">
            <summary>
            klasa1 jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość klasa1 jest liczbą.
            </summary>
            <value>
            Klasa.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Marka1">
            <summary>
            marak1 jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość marka1 jest liczbą.
            </summary>
            <value>
            Marka.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Silnik1">
            <summary>
            silniki jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość silniki jest liczbą.
            </summary>
            <value>
            Silniki.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Skrzynia_Biegów1">
            <summary>
            skrzynia_biegów jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość skrzynia_biegów jest liczbą.
            </summary>
            <value>
            Skrzynia biegów.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Rodzaj_Nadwozia1">
            <summary>
            rodzaj_nadwozia jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość rodzaj_nadwozia jest liczbą.
            </summary>
            <value>
            Rodzaj nadwozia.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Model1">
            <summary>
            Model1 jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Model1 jest liczbą.
            </summary>
            <value>
            Model.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Rezerwacja">
            <summary>
            Rezerwacja jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Rezerwacja jest liczbą.
            </summary>
            <value>
            Rezerwacja.
            </value>
        </member>
        <member name="P:po_projekt.samochody.Rezerwujacy">
            <summary>
            Rezerwujacy jest zadeklarowana jako właściwość, aby metoda dostępu set mogła upewnić się, że wartość Rezerwujacy jest liczbą.
            </summary>
            <value>
            Rezerwujący.
            </value>
        </member>
        <member name="M:po_projekt.samochody.#ctor">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.samochody"/> klasy.
            </summary>
        </member>
        <member name="M:po_projekt.samochody.#ctor(po_projekt.samochody.klasa,System.String,po_projekt.samochody.silnik,po_projekt.samochody.skrzynia_biegów,po_projekt.samochody.rodzaj_nadwozia)">
            <summary>
            Inicjalizuje nową instancję <see cref="T:po_projekt.samochody"/> klasy.
            </summary>
            <param name="klasa">Parametr klasa pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="marka">Parametr marka pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="silnik">Parametr silnik pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="skrzynia_Biegów">Parametr skrzynia_Biegów pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="rodzaj_Nadwozia">Parametr rodzaj_Nadwozia pozwala na przekazywanie oraz zwracanie danych z metody..</param>
            <exception cref="T:System.ArgumentNullException">Wyrzuca wyjątek marka.</exception>
        </member>
        <member name="M:po_projekt.samochody.CompareTo(System.Object)">
            <summary>
            Porównanie.
            </summary>
            <param name="other">Parametr other pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Zwraca prawdę, bądź fałsz.</returns>
        </member>
        <member name="M:po_projekt.samochody.ToString">
            <summary>
            Wypisanie samochodów.
            </summary>
            <returns>
            A <see cref="T:System.String" /> Wypisuje samochody w podanej postaci.
            </returns>
        </member>
        <member name="T:po_projekt.ubezpieczenia">
            <summary>
            Klasa opisująca ubezpieczenia.
            </summary>
        </member>
        <member name="T:po_projekt.wypożyczanie">
            <summary>
            Klasa opsująca wypożyczenia.
            </summary>
            <seealso cref="T:po_projekt.oferta" />
        </member>
        <member name="M:po_projekt.wypożyczanie.wypożycz(po_projekt.samochody,po_projekt.oferta)">
            <summary>
            Wypożyczanie samochodu z oferty.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="o">Parametr o pozwala na przekazywanie oraz zwracanie danych z metody.</param>
        </member>
        <member name="M:po_projekt.wypożyczanie.wybór_samochodu_do_wypożyczenia(po_projekt.oferta,po_projekt.klient)">
            <summary>
            Wybór samochodu do wypożyczenia.
            </summary>
            <param name="s">Parametr s pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <param name="K">Parametr K pozwala na przekazywanie oraz zwracanie danych z metody.</param>
            <returns>Zwraca parametr k.</returns>
        </member>
        <member name="T:po_projekt.zwroty">
            <summary>
            Klasa opisująca zwroty samochodów.
            </summary>
        </member>
    </members>
</doc>
